[core]
	editor = vim 
	excludesfile = /home/dowewas2/.gitignore_global
[push]
	default = upstream
[merg]
	conflictstyle = diff3
[user]
	email = derekyoungmath@gmail.com
	name = derekyoungmath
[alias]
	#shows status
	st = status --short
	#commit modified file
	m = commit -m
	#disregard single file changes
	z = checkout HEAD --
	#shows list of commits and files
	lo = log --name-status
	#difference of head and current (could be staged)
	d = diff HEAD
	#shows log in a compressed way
	plo = log --graph --oneline --pretty=format:\"%C(yellow)%h %C(cyan)%ad %C(white) %s\"
	#add and commit in one command
	ac = !git add --all && git commit -am
	#add and commit and add update message in one command
	up = !git add --all && git commit -am "update"
	#show the files added
	sho = show --pretty="" --name-only
	#show commit histor as a tree
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	#show commit histor as a tree with detailed date
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"
	#alias to checkout master branch
	ckm = checkout master
	#alias for checkout
	ck = ckeckout
	#difference between head and commit before head
	di = diff HEAD^ HEAD
	#difference between local version and remote version
	lrdi = diff --name-status master origin/master
	#print previous commit files
	pfiles = diff-tree --no-commit-id --name-only -r HEAD
	#push local state to replace remote state
	p = push origin master
	#difference before add and commit
	undi = diff --cached
	#checkout a commit
	co = "!g() { git checkout "$1"; }; g"
	#checkout a commit and make master
	back = "!g() { git reset --hard "$1"; }; g"
	#checkout a commit master
	com = checkout master
	#this is a shell function(show only the file names that are different)
	files = "!f() { git diff --name-status "$1^" "$1"; }; f" 
	#disregard all changes
	pre = checkout -- .
	#delete untracked files and FILES NOT SHOWING
	rem = clean -df 
[credential]
	helper = cache --timeout 3600
